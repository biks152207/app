{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","show","destroy","changePassword","forget","me","checkToken","changepassword","authCallback","resetTemplate","subject","text","validationError","res","statusCode","console","log","err","status","json","handleError","send","req","find","exec","then","users","catch","newUser","body","provider","role","save","user","token","sign","_id","secrets","session","expiresIn","next","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","email","findOne","select","message","resetPasswordToken","resetPasswordExpires","Date","now","headers","host","merge","result","$gt","state","redirect"],"mappings":"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","file":"api/user/user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\nimport { generateToken } from '../../utilities/utility';\nimport {sendMail} from '../../utilities/mailer';\nimport _ from 'lodash';\n\nconst resetTemplate = {\n  subject: 'Password Reset',\n  text: 'You have subscribed newsletters'\n}\n\nfunction validationError(res, statusCode) {\n  console.log('from error');\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.role = 'user';\n  newUser.save()\n    .then(function(user) {\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\nexport function forget(req, res){\n  var email = req.body.email;\n  if (email){\n    return User.findOne({email: email}).select('-password').exec()\n      .then(user =>{\n        if(!user) {\n          return res.status(404).json({message: 'We dont find the user with this email, Please try again with new email.'});\n        }\n        generateToken().then((token) => {\n          user.resetPasswordToken = token;\n          user.resetPasswordExpires = Date.now() + 3600000;\n          user.save()\n            .then(() => {\n              resetTemplate.text =  `You are receiving this because you (or someone else) have requested the reset of the password for your account.\\n\\n\n                    Please click on the following link, or paste this into your browser to complete the process:\\n\\n\n                    http://${req.headers.host}/reset/${token}\\n\\n\n                    If you did not request this, please ignore this email and your password will remain unchanged.\\n`;\n              sendMail(_.merge(resetTemplate, {email: email}))\n                .then(\n                  (result) =>{\n                    res.json({message:'We have sent you an email, Please check your email for registration.'})\n                  }\n                )\n            })\n            .catch((err) => {\n              console.log(err);\n            })\n        })\n      })\n  }else{\n    return res.status(403).json({message: 'Enter your email address'})\n  }\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n  console.log(userId);\n  console.log('heal the world')\n\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      console.log(user);\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\nexport function checkToken(req, res, next){\n  if (req.params.token){\n    return User.findOne({resetPasswordToken: req.params.token, resetPasswordExpires: { $gt: Date.now() }}).exec()\n      .then(user =>{\n        if (!user){\n          return res.status(404).json({message: 'Password reset token is invalid or has expired'});\n        }else{\n          return res.json({message: 'success'});\n        }\n      })\n  }else{\n    return res.state(404).end();\n  }\n}\n\nexport function changepassword(req, res, next){\n  console.log(req.body);\n  if (req.body.token && req.body.password){\n    return User.findOne({resetPasswordToken: req.body.token, resetPasswordExpires: { $gt: Date.now() }}).exec()\n      .then(user =>{\n        if (!user){\n          return res.status(404).json({message: 'Password reset token is invalid or has expired'});\n        }else{\n          console.log(user);\n          user.password = req.body.password;\n          user.resetPasswordToken = ' ';\n          return user.save()\n            .then(() => {\n              res.status(200).json({message: 'Password successfully changed, Please login'});\n            })\n            // .catch(validationError(res));\n        }\n      })\n  }else{\n    return res.status(404).json({message: 'Missing arguments'})\n  }\n}\n\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"],"sourceRoot":"/source/"}