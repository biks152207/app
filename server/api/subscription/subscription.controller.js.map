{"version":3,"sources":["api/subscription/subscription.controller.js"],"names":["index","show","create","upsert","patch","destroy","messageTemplate","subject","text","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","console","log","send","req","find","exec","catch","findById","params","id","body","merge","email","result","message","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"api/subscription/subscription.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/subscriptions              ->  index\n * POST    /api/subscriptions              ->  create\n * GET     /api/subscriptions/:id          ->  show\n * PUT     /api/subscriptions/:id          ->  upsert\n * PATCH   /api/subscriptions/:id          ->  patch\n * DELETE  /api/subscriptions/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Subscription from './subscription.model';\nimport {sendMail} from '../../utilities/mailer';\nimport _ from 'lodash';\n\nconst messageTemplate = {\n  subject: 'Subscription successful',\n  text: 'You have subscribed newsletters'\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  console.log('from error');\n  console.log(statusCode);\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Subscriptions\nexport function index(req, res) {\n  return Subscription.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Subscription from the DB\nexport function show(req, res) {\n  return Subscription.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Subscription in the DB\nexport function create(req, res) {\n  return Subscription.create(req.body)\n    .then(() =>{\n      console.log('here are are in the email sending process');\n      sendMail(_.merge(messageTemplate, {email: req.body.email}))\n        .then(\n          (result) =>{\n            res.json({message:'Successful'})\n          }\n        )\n    })\n    // .catch(handleError(res));\n}\n\n// Upserts the given Subscription in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Subscription.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Subscription in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Subscription.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Subscription from the DB\nexport function destroy(req, res) {\n  return Subscription.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}